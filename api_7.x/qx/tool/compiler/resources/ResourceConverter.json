{
  "className": "qx.tool.compiler.resources.ResourceConverter",
  "packageName": "qx.tool.compiler.resources",
  "name": "ResourceConverter",
  "superClass": "qx.tool.compiler.resources.AbstractMatcher",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 27,
        "column": 0,
        "index": 905
      },
      "end": {
        "line": 81,
        "column": 3,
        "index": 2931
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Instances of ResourceConverter are used by the resource manager to transfer resources into\n the target output, where they require something more than just copying (eg SCSS compilation)</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": true,
  "isStatic": false,
  "isSingleton": false,
  "members": {
    "isDoNotCopy": {
      "location": {
        "start": {
          "line": 35,
          "column": 4,
          "index": 1149
        },
        "end": {
          "line": 37,
          "column": 5,
          "index": 1198
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Allows the converter to decide to not copy the resource at all</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "needsConvert": {
      "location": {
        "start": {
          "line": 51,
          "column": 4,
          "index": 1759
        },
        "end": {
          "line": 53,
          "column": 5,
          "index": 1860
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects whether the file needs to be recompiled/coverted/analysed/ etc, and is done after\n checks determine whether the file datetime stamp indicate it's necessary</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "target {Target} the target",
            "paramName": "target",
            "description": " the target",
            "type": "Target"
          },
          {
            "name": "@param",
            "body": "asset {Asset} the asset to copy",
            "paramName": "asset",
            "description": " the asset to copy",
            "type": "qx.tool.compiler.resources.Asset"
          },
          {
            "name": "@param",
            "body": "srcFilename {String} full path to the file",
            "paramName": "srcFilename",
            "description": " full path to the file",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "destFilename {String} full path to the destination file",
            "paramName": "destFilename",
            "description": " full path to the destination file",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "isThemeFile {Booelan} true if the file is a theme file (as opposed to a normal resource file)",
            "paramName": "isThemeFile",
            "description": " true if the file is a theme file (as opposed to a normal resource file)",
            "type": "Booelan"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean}",
            "type": "Boolean",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDestFilename": {
      "location": {
        "start": {
          "line": 62,
          "column": 4,
          "index": 2098
        },
        "end": {
          "line": 64,
          "column": 5,
          "index": 2155
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the destination filename, or null if default is to be used</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "target {Target} the target",
            "paramName": "target",
            "description": " the target",
            "type": "Target"
          },
          {
            "name": "@param",
            "body": "asset {Asset} the asset to copy",
            "paramName": "asset",
            "description": " the asset to copy",
            "type": "qx.tool.compiler.resources.Asset"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String?} full path to the file",
            "type": "String?",
            "description": " full path to the file"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "compile": {
      "location": {
        "start": {
          "line": 77,
          "column": 4,
          "index": 2768
        },
        "end": {
          "line": 79,
          "column": 5,
          "index": 2923
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Allows a file to be recompiled/coverted/analysed/ etc; must return a Promise which resolves\n when complete.  Data can be stored in the resource database by modifying the fileInfo</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "target {Target} the target",
            "paramName": "target",
            "description": " the target",
            "type": "Target"
          },
          {
            "name": "@param",
            "body": "asset {Asset} the asset to copy",
            "paramName": "asset",
            "description": " the asset to copy",
            "type": "qx.tool.compiler.resources.Asset"
          },
          {
            "name": "@param",
            "body": "srcFilename {String} full path to the file",
            "paramName": "srcFilename",
            "description": " full path to the file",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "destFilename {String} full path to the destination file",
            "paramName": "destFilename",
            "description": " full path to the destination file",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "isThemeFile {Boolean} whether the file is in a theme",
            "paramName": "isThemeFile",
            "description": " whether the file is in a theme",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String[]} list of filenames that are required for the compilation (dependencies); may be null",
            "type": "String[]",
            "description": " list of filenames that are required for the compilation (dependencies); may be null"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.tool.compiler.resources.AbstractMatcher",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.tool.compiler.resources.AbstractMatcher",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.tool.compiler.resources.AbstractMatcher",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.tool.compiler.resources.AbstractMatcher",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.tool.compiler.resources.AbstractMatcher",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.tool.compiler.resources.AbstractMatcher",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "descendants": [
    "qx.tool.compiler.resources.ScssConverter",
    "qx.tool.compiler.resources.ScssIncludeConverter"
  ]
}
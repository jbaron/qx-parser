{
  "className": "qx.tool.compiler.resources.ResourceLoader",
  "packageName": "qx.tool.compiler.resources",
  "name": "ResourceLoader",
  "superClass": "qx.tool.compiler.resources.AbstractMatcher",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 27,
        "column": 0,
        "index": 838
      },
      "end": {
        "line": 61,
        "column": 3,
        "index": 2076
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Instances of Handler are used by the resource manager to handle different types of resources that\n  need compilation.</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": true,
  "isStatic": false,
  "isSingleton": false,
  "members": {
    "needsLoad": {
      "location": {
        "start": {
          "line": 44,
          "column": 4,
          "index": 1561
        },
        "end": {
          "line": 50,
          "column": 5,
          "index": 1785
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects whether the file needs to be recompiled/coverted/analysed/ etc; this should\n not take any time or be asynchronous, if you need to do any real work it should be\n in <code>compile</code> because that is throttled.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "filename {String} absolute path to the file",
            "paramName": "filename",
            "description": " absolute path to the file",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "fileInfo {Map?} this is the object in the resource database, contains info about the resource;\n  this will be null if not yet in the resource database",
            "paramName": "fileInfo",
            "description": " this is the object in the resource database, contains info about the resource;\n  this will be null if not yet in the resource database",
            "optional": true,
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "stat {fs.Stats} Stats object from fs.stat",
            "paramName": "stat",
            "description": " Stats object from fs.stat",
            "type": "fs.Stats"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean}",
            "type": "Boolean",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "load": {
      "location": {
        "start": {
          "line": 57,
          "column": 4,
          "index": 1964
        },
        "end": {
          "line": 59,
          "column": 5,
          "index": 2068
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Allows a file to be loadeddata can be stored in the resource database by modifying the fileInfo</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "asset {Asset} the asset to load",
            "paramName": "asset",
            "description": " the asset to load",
            "type": "qx.tool.compiler.resources.Asset"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.tool.compiler.resources.AbstractMatcher",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.tool.compiler.resources.AbstractMatcher",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.tool.compiler.resources.AbstractMatcher",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.tool.compiler.resources.AbstractMatcher",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.tool.compiler.resources.AbstractMatcher",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.tool.compiler.resources.AbstractMatcher",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "descendants": [
    "qx.tool.compiler.resources.ImageLoader",
    "qx.tool.compiler.resources.MetaLoader"
  ]
}
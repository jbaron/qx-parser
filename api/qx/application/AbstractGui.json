{
  "className": "qx.application.AbstractGui",
  "packageName": "qx.application",
  "name": "AbstractGui",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.application.IApplication"
  ],
  "mixins": [
    "qx.locale.MTranslation"
  ],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0,
        "index": 584
      },
      "end": {
        "line": 111,
        "column": 3,
        "index": 2937
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Abstract base class for GUI applications using qooxdoo widgets.</p>"
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "qx.core.Init"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": true,
  "isStatic": false,
  "isSingleton": false,
  "members": {
    "__root": {
      "location": {
        "start": {
          "line": 38,
          "column": 4,
          "index": 1012
        },
        "end": {
          "line": 38,
          "column": 16,
          "index": 1024
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.ui.core.Widget} The root widget"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "_createRootWidget": {
      "location": {
        "start": {
          "line": 47,
          "column": 4,
          "index": 1322
        },
        "end": {
          "line": 49,
          "column": 5,
          "index": 1396
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Create the root widget. This method is abstract and must be overridden\n by sub classes.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} The root widget. This widget must be configured\n     with a {@link qx.ui.layout.Basic} or {@link qx.ui.layout.Canvas} layout.",
            "type": "qx.ui.core.Widget",
            "description": " The root widget. This widget must be configured\n     with a {@link qx.ui.layout.Basic} or {@link qx.ui.layout.Canvas} layout."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getRoot": {
      "location": {
        "start": {
          "line": 62,
          "column": 4,
          "index": 1944
        },
        "end": {
          "line": 64,
          "column": 5,
          "index": 1987
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the application's root widget. The root widgets can act as container\n for popups. It is configured with a {@link qx.ui.layout.Basic} (if the\n application is an inline application) layout or a {@link qx.ui.layout.Canvas}\n (if the application is a standalone application) layout .\n The root has the same add method as the configured layout\n ({@link qx.ui.layout.Basic} or {@link qx.ui.layout.Canvas}).</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} The application's root widget.",
            "type": "qx.ui.core.Widget",
            "description": " The application's root widget."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "main": {
      "location": {
        "start": {
          "line": 67,
          "column": 4,
          "index": 2018
        },
        "end": {
          "line": 86,
          "column": 5,
          "index": 2611
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.application.IApplication",
      "appearsIn": [
        "qx.application.IApplication"
      ]
    },
    "finalize": {
      "location": {
        "start": {
          "line": 89,
          "column": 4,
          "index": 2642
        },
        "end": {
          "line": 91,
          "column": 5,
          "index": 2681
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.application.IApplication",
      "appearsIn": [
        "qx.application.IApplication"
      ]
    },
    "render": {
      "location": {
        "start": {
          "line": 97,
          "column": 4,
          "index": 2744
        },
        "end": {
          "line": 99,
          "column": 5,
          "index": 2800
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Updates the GUI rendering</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "close": {
      "location": {
        "start": {
          "line": 102,
          "column": 4,
          "index": 2831
        },
        "end": {
          "line": 104,
          "column": 5,
          "index": 2864
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.application.IApplication",
      "appearsIn": [
        "qx.application.IApplication"
      ]
    },
    "terminate": {
      "location": {
        "start": {
          "line": 107,
          "column": 4,
          "index": 2895
        },
        "end": {
          "line": 109,
          "column": 5,
          "index": 2929
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.application.IApplication",
      "appearsIn": [
        "qx.application.IApplication"
      ]
    },
    "tr": {
      "type": "function",
      "name": "tr",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.locale.MTranslation",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Translate a message\n Mark the message for translation.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "messageId {String} message id (may contain format strings)",
            "paramName": "messageId",
            "description": " message id (may contain format strings)",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "varargs {Object?} variable number of arguments applied to the format string",
            "paramName": "varargs",
            "description": " variable number of arguments applied to the format string",
            "optional": true,
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String | LocalizedString} The translated message or localized string",
            "type": "String | LocalizedString",
            "description": " The translated message or localized string"
          }
        ]
      }
    },
    "trn": {
      "type": "function",
      "name": "trn",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.locale.MTranslation",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Translate a plural message\n Mark the messages for translation.\n Depending on the third argument the plural or the singular form is chosen.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "singularMessageId {String} message id of the singular form (may contain format strings)",
            "paramName": "singularMessageId",
            "description": " message id of the singular form (may contain format strings)",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "pluralMessageId {String} message id of the plural form (may contain format strings)",
            "paramName": "pluralMessageId",
            "description": " message id of the plural form (may contain format strings)",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "count {Integer} if greater than 1 the plural form otherwise the singular form is returned.",
            "paramName": "count",
            "description": " if greater than 1 the plural form otherwise the singular form is returned.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "varargs {Object?} variable number of arguments applied to the format string",
            "paramName": "varargs",
            "description": " variable number of arguments applied to the format string",
            "optional": true,
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String | LocalizedString} The translated message or localized string",
            "type": "String | LocalizedString",
            "description": " The translated message or localized string"
          }
        ]
      }
    },
    "trc": {
      "type": "function",
      "name": "trc",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.locale.MTranslation",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Translate a message with translation hint\n Mark the messages for translation.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "hint {String} hint for the translator of the message. Will be included in the .po file.",
            "paramName": "hint",
            "description": " hint for the translator of the message. Will be included in the .po file.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "messageId {String} message id (may contain format strings)",
            "paramName": "messageId",
            "description": " message id (may contain format strings)",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "varargs {Object?} variable number of arguments applied to the format string",
            "paramName": "varargs",
            "description": " variable number of arguments applied to the format string",
            "optional": true,
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String | LocalizedString} The translated message or localized string",
            "type": "String | LocalizedString",
            "description": " The translated message or localized string"
          }
        ]
      }
    },
    "trnc": {
      "type": "function",
      "name": "trnc",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.locale.MTranslation",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Translate a plural message with translation hint\n Mark the messages for translation.\n Depending on the third argument the plural or the singular form is chosen.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "hint {String} hint for the translator of the message. Will be included in the .po file.",
            "paramName": "hint",
            "description": " hint for the translator of the message. Will be included in the .po file.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "singularMessageId {String} message id of the singular form (may contain format strings)",
            "paramName": "singularMessageId",
            "description": " message id of the singular form (may contain format strings)",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "pluralMessageId {String} message id of the plural form (may contain format strings)",
            "paramName": "pluralMessageId",
            "description": " message id of the plural form (may contain format strings)",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "count {Integer} if greater than 1 the plural form otherwise the singular form is returned.",
            "paramName": "count",
            "description": " if greater than 1 the plural form otherwise the singular form is returned.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "varargs {Object?} variable number of arguments applied to the format string",
            "paramName": "varargs",
            "description": " variable number of arguments applied to the format string",
            "optional": true,
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String | LocalizedString} The translated message or localized string",
            "type": "String | LocalizedString",
            "description": " The translated message or localized string"
          }
        ]
      }
    },
    "marktr": {
      "type": "function",
      "name": "marktr",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.locale.MTranslation",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Mark the message for translation but return the original message.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "messageId {String} the message ID",
            "paramName": "messageId",
            "description": " the message ID",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} messageId",
            "type": "String",
            "description": " messageId"
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "descendants": [
    "qx.application.Inline",
    "qx.application.Standalone"
  ]
}
{
  "className": "qx.bom.HashHistory",
  "packageName": "qx.bom",
  "name": "HashHistory",
  "superClass": "qx.bom.History",
  "interfaces": [
    "qx.core.IDisposable"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 31,
        "column": 0,
        "index": 843
      },
      "end": {
        "line": 226,
        "column": 3,
        "index": 5583
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>History manager implementation for IE greater 7. IE reloads iframe\n content on history actions even just hash value changed. This\n implementation forwards history states (hashes) to a helper iframe.\n This class must be disposed of after use</p>"
        }
      ],
      "@internal": [
        {
          "name": "@internal",
          "body": ""
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 35,
        "column": 2,
        "index": 948
      },
      "end": {
        "line": 39,
        "column": 3,
        "index": 1029
      }
    }
  },
  "members": {
    "__checkOnHashChange": {
      "location": {
        "start": {
          "line": 42,
          "column": 4,
          "index": 1049
        },
        "end": {
          "line": 42,
          "column": 29,
          "index": 1074
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__iframe": {
      "location": {
        "start": {
          "line": 43,
          "column": 4,
          "index": 1080
        },
        "end": {
          "line": 43,
          "column": 18,
          "index": 1094
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__iframeReady": {
      "location": {
        "start": {
          "line": 44,
          "column": 4,
          "index": 1100
        },
        "end": {
          "line": 44,
          "column": 24,
          "index": 1120
        }
      },
      "type": "variable",
      "access": "private"
    },
    "addToHistory": {
      "location": {
        "start": {
          "line": 47,
          "column": 4,
          "index": 1144
        },
        "end": {
          "line": 60,
          "column": 5,
          "index": 1468
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.bom.History",
      "appearsIn": [
        "qx.bom.History"
      ]
    },
    "__initIframe": {
      "location": {
        "start": {
          "line": 66,
          "column": 4,
          "index": 1528
        },
        "end": {
          "line": 74,
          "column": 5,
          "index": 1811
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initializes the iframe</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__createIframe": {
      "location": {
        "start": {
          "line": 83,
          "column": 4,
          "index": 2041
        },
        "end": {
          "line": 97,
          "column": 5,
          "index": 2435
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>IMPORTANT NOTE FOR IE:\n Setting the source before adding the iframe to the document.\n Otherwise IE will bring up a \"Unsecure items â€¦\" warning in SSL mode</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element}",
            "type": "qx.bom.Element",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__waitForIFrame": {
      "location": {
        "start": {
          "line": 107,
          "column": 4,
          "index": 2818
        },
        "end": {
          "line": 133,
          "column": 5,
          "index": 3402
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Waits for the IFrame being loaded. Once the IFrame is loaded\n the callback is called with the provided context.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} This function will be called once the iframe is loaded",
            "paramName": "callback",
            "description": " This function will be called once the iframe is loaded",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "context {Object?window} The context for the callback.",
            "paramName": "context",
            "description": " The context for the callback.",
            "optional": true,
            "defaultValue": "window",
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "retry {Integer} number of tries to initialize the iframe",
            "paramName": "retry",
            "description": " number of tries to initialize the iframe",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__attachListeners": {
      "location": {
        "start": {
          "line": 138,
          "column": 4,
          "index": 3461
        },
        "end": {
          "line": 144,
          "column": 5,
          "index": 3606
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Attach hash change listeners</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__detatchListeners": {
      "location": {
        "start": {
          "line": 149,
          "column": 4,
          "index": 3665
        },
        "end": {
          "line": 155,
          "column": 5,
          "index": 3814
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Remove hash change listeners</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__onHashChange": {
      "location": {
        "start": {
          "line": 160,
          "column": 4,
          "index": 3870
        },
        "end": {
          "line": 169,
          "column": 5,
          "index": 4098
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>hash change event handler</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_readState": {
      "location": {
        "start": {
          "line": 176,
          "column": 4,
          "index": 4264
        },
        "end": {
          "line": 179,
          "column": 5,
          "index": 4385
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Browser dependent function to read the current state of the history</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} current state of the browser history",
            "type": "qx.bom.String",
            "description": " current state of the browser history"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.bom.History",
      "appearsIn": [
        "qx.bom.History"
      ]
    },
    "_getHash": {
      "location": {
        "start": {
          "line": 188,
          "column": 4,
          "index": 4678
        },
        "end": {
          "line": 193,
          "column": 5,
          "index": 4823
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the fragment identifier of the top window URL. For gecko browsers we\n have to use a regular expression to avoid encoding problems.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|null} the fragment identifier or <code>null</code> if the\n iframe isn't ready yet",
            "type": "String|null",
            "description": " the fragment identifier or <code>null</code> if the\n iframe isn't ready yet"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.bom.History",
      "appearsIn": [
        "qx.bom.History"
      ]
    },
    "_writeState": {
      "location": {
        "start": {
          "line": 200,
          "column": 4,
          "index": 4942
        },
        "end": {
          "line": 202,
          "column": 5,
          "index": 5010
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Save a state into the browser history.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "state {String} state to save",
            "paramName": "state",
            "description": " state to save",
            "type": "qx.bom.String"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.bom.History",
      "appearsIn": [
        "qx.bom.History"
      ]
    },
    "_setHash": {
      "location": {
        "start": {
          "line": 209,
          "column": 4,
          "index": 5147
        },
        "end": {
          "line": 219,
          "column": 5,
          "index": 5497
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the fragment identifier of the window URL</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String} the fragment identifier",
            "paramName": "value",
            "description": " the fragment identifier",
            "type": "qx.bom.String"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.bom.History",
      "appearsIn": [
        "qx.bom.History"
      ]
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getTitle": {
      "type": "function",
      "name": "getTitle",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>title</code>.\n\nFor further details take a look at the property definition: {@link #title}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for title"
          }
        ]
      }
    },
    "setTitle": {
      "type": "function",
      "name": "setTitle",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>title</code>.\n\nFor further details take a look at the property definition: {@link #title}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for title"
          }
        ]
      }
    },
    "resetTitle": {
      "type": "function",
      "name": "resetTitle",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>title</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #title}."
          }
        ]
      }
    },
    "getState": {
      "type": "function",
      "name": "getState",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>state</code>.\n\nFor further details take a look at the property definition: {@link #state}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for state"
          }
        ]
      }
    },
    "setState": {
      "type": "function",
      "name": "setState",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>state</code>.\n\nFor further details take a look at the property definition: {@link #state}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for state"
          }
        ]
      }
    },
    "resetState": {
      "type": "function",
      "name": "resetState",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>state</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #state}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 222,
        "column": 2,
        "index": 5506
      },
      "end": {
        "line": 225,
        "column": 3,
        "index": 5579
      }
    }
  },
  "events": {},
  "descendants": []
}
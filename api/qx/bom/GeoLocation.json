{
  "className": "qx.bom.GeoLocation",
  "packageName": "qx.bom",
  "name": "GeoLocation",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 35,
        "column": 0,
        "index": 959
      },
      "end": {
        "line": 153,
        "column": 3,
        "index": 4407
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>GeoLocation provides access to geographical location information\n associated with the hosting device.\n For more information see:\n http://www.w3.org/TR/geolocation-API/\n This class does not need to be disposed, but you would obviously call\n stopWatchPosition() to top watching and free up resources consumed\n by startWatchPosition().  The destructor will do this for you, if\n you call dispose()</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": true,
  "construct": {
    "location": {
      "start": {
        "line": 39,
        "column": 2,
        "index": 1049
      },
      "end": {
        "line": 41,
        "column": 3,
        "index": 1113
      }
    }
  },
  "events": {
    "position": {
      "location": {
        "start": {
          "line": 45,
          "column": 4,
          "index": 1178
        },
        "end": {
          "line": 45,
          "column": 41,
          "index": 1215
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the position is updated</p>"
          }
        ]
      },
      "name": "position",
      "type": "qx.event.type.GeoPosition"
    },
    "error": {
      "location": {
        "start": {
          "line": 48,
          "column": 4,
          "index": 1260
        },
        "end": {
          "line": 48,
          "column": 31,
          "index": 1287
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when an error occurs</p>"
          }
        ]
      },
      "name": "error",
      "type": "qx.event.type.Data"
    }
  },
  "members": {
    "_watchId": {
      "location": {
        "start": {
          "line": 52,
          "column": 4,
          "index": 1311
        },
        "end": {
          "line": 52,
          "column": 18,
          "index": 1325
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_geolocation": {
      "location": {
        "start": {
          "line": 53,
          "column": 4,
          "index": 1331
        },
        "end": {
          "line": 53,
          "column": 22,
          "index": 1349
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "getCurrentPosition": {
      "location": {
        "start": {
          "line": 64,
          "column": 4,
          "index": 1793
        },
        "end": {
          "line": 93,
          "column": 5,
          "index": 2802
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Retrieves the current position and calls the \"position\" event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "enableHighAccuracy {Boolean} provide the best possible results",
            "paramName": "enableHighAccuracy",
            "description": " provide the best possible results",
            "type": "Boolean"
          },
          {
            "name": "@param",
            "body": "timeout {Integer} maximum time in ms that is allowed to pass from\n the call to getCurrentPosition() or watchPosition() until the corresponding\n callback is invoked.",
            "paramName": "timeout",
            "description": " maximum time in ms that is allowed to pass from\n the call to getCurrentPosition() or watchPosition() until the corresponding\n callback is invoked.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "maximumAge {Integer} cache the position for a specified time.",
            "paramName": "maximumAge",
            "description": " cache the position for a specified time.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "startWatchPosition": {
      "location": {
        "start": {
          "line": 104,
          "column": 4,
          "index": 3268
        },
        "end": {
          "line": 119,
          "column": 5,
          "index": 3762
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Starts to watch the position. Calls the \"position\" event, when the position changed.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "enableHighAccuracy {Boolean} provide the best possible results",
            "paramName": "enableHighAccuracy",
            "description": " provide the best possible results",
            "type": "Boolean"
          },
          {
            "name": "@param",
            "body": "timeout {Integer} maximum time in ms that is allowed to pass from\n the call to getCurrentPosition() or watchPosition() until the corresponding\n callback is invoked.",
            "paramName": "timeout",
            "description": " maximum time in ms that is allowed to pass from\n the call to getCurrentPosition() or watchPosition() until the corresponding\n callback is invoked.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "maximumAge {Integer} cache the position for a specified time.",
            "paramName": "maximumAge",
            "description": " cache the position for a specified time.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "stopWatchPosition": {
      "location": {
        "start": {
          "line": 124,
          "column": 4,
          "index": 3821
        },
        "end": {
          "line": 129,
          "column": 5,
          "index": 3974
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Stops watching the position.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_successHandler": {
      "location": {
        "start": {
          "line": 136,
          "column": 4,
          "index": 4075
        },
        "end": {
          "line": 138,
          "column": 5,
          "index": 4181
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Success handler.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "position {Object} position event",
            "paramName": "position",
            "description": " position event",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_errorHandler": {
      "location": {
        "start": {
          "line": 145,
          "column": 4,
          "index": 4278
        },
        "end": {
          "line": 147,
          "column": 5,
          "index": 4348
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The Error handler.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "error {Object} error event",
            "paramName": "error",
            "description": " error event",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 150,
        "column": 2,
        "index": 4357
      },
      "end": {
        "line": 152,
        "column": 3,
        "index": 4403
      }
    }
  },
  "descendants": []
}